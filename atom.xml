<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎来到剃蛙铽</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-09-22T23:14:14.339Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>魔皇地狱</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第三篇博客</title>
    <link href="http://example.com/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-09-22T23:03:29.799Z</published>
    <updated>2023-09-22T23:14:14.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人博客第3篇——绑定GitHub并提交文件"><a href="#个人博客第3篇——绑定GitHub并提交文件" class="headerlink" title="个人博客第3篇——绑定GitHub并提交文件"></a>个人博客第3篇——绑定GitHub并提交文件</h1><p>绑定github并尝试提交文件</p><span id="more"></span><p>在之前我已经完成了GitHub的注册还有git的安装，现在就是将git与GitHub绑定了。为什么要绑定GitHub呢？就是为了方便我们上传文件。虽然在GitHub上我们可以直接上传文件，但是我试了一下发现并不好用，点击上传完全没反应，可能是网络的原因吧。所以我们利用SSH来完成GitHub的绑定并提交文件，这样很方便快捷。首先来简单介绍一下SSH协议。</p><p>SSH（安全外壳协议，Secure Shell 的缩写）是建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。简单来说，SSH就是保障你的账户安全，将你的数据加密压缩，不仅防止其他人截获你的数据，还能加快传输速度。如果想详细了解的话，可以看这篇文章：<a href="https://blog.csdn.net/qq_35246620/article/details/54317740">详述 SSH 的原理及其应用 - CSDN</a>，下面就详细介绍如何绑定GitHub和提交文件。</p><h2 id="1-绑定GitHub"><a href="#1-绑定GitHub" class="headerlink" title="1.绑定GitHub"></a>1.绑定GitHub</h2><p>我们要用git上传文件到GitHub首先得利用SSH登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-daee176b8f87fbc5c6ff5feca6bd0887_720w.png" alt="img"></p><p>输入 ssh 命令，查看本机是否安装 SSH：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-b4792b227defc69aa7927ca9b73e4316_720w.webp" alt="img"></p><p>如上图所示，即已安装 SSH. 然后，输入 ssh-keygen -t rsa 命令<em><strong>（注意空格）</strong></em>，表示我们指定 RSA 算法生成密钥，然后敲四次回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub. ***（注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.）***文件的位置在 Git Bash 上面都有显示，默认生成在以下目录：</p><ul><li>Linux 系统：~&#x2F;.ssh</li><li>Mac 系统：~&#x2F;.ssh</li><li>Windows 10 ：C:&#x2F;Users&#x2F;ASUS&#x2F;.ssh</li></ul><p>接下来我们要做的事情就是把公钥 id_rsa.pub 的内容添加到 GitHub。复制公钥 id_rsa.pub 文件里的内容，你可以通过目录找到 id_rsa.pub 文件的位置，用记事本打开文件复制。如果你实在找不到文件也没有关系，按照以下步骤直接在 Git Bash 上打开就行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh </span><br><span class="line">$ ls</span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-692b1cd8e719dac8012afe6fda775209_720w.webp" alt="img"></p><p><em><strong>（再次注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和Shift+insert.）</strong></em>接下来进入我们的 GitHub 主页，先点击右上角，再点击 *<strong>settings*</strong> ：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-0fe5a7f1dcbff38030bfdfeaba2c9515_720w.webp" alt="img"></p><p>如下图，先点击 ***SSH and GPG keys，***再点击 <em><strong>New SSH key.</strong></em></p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-c799cbbea9d6ca9572796364571790bd_720w.webp" alt="img"></p><p>将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 ***Add SSH key，***如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-0b61abaf4069dc04003e85e7499d42b0_720w.webp" alt="img"></p><p>验证是否成功，我们可以通过在 Git Bash 中输入 ssh -T <a href="mailto:git@github.com">git@github.com</a> 进行检验：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-5b4f05ea2e2a7fb8b13fd35a9bafa8ce_720w.png" alt="img"></p><p>第一次会出现这种情况，填 yes 就行，若出现下图中的情况，则表明绑定成功：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-3915b3e46e40010d3d911f84d4e8b0ff_720w.png" alt="img"></p><h2 id="2-提交文件"><a href="#2-提交文件" class="headerlink" title="2.提交文件"></a>2.提交文件</h2><p>提交文件有两种方法：</p><h3 id="第一种：本地没有-git-仓库"><a href="#第一种：本地没有-git-仓库" class="headerlink" title="第一种：本地没有 git 仓库"></a>第一种：本地没有 git 仓库</h3><ol><li>直接将远程仓库 clone 到本地；</li><li>将文件添加并 commit 到本地仓库；</li><li>将本地仓库的内容push到远程仓库。</li></ol><h3 id="第二种：本地有-Git-仓库，并且我们已经进行了多次-commit-操作"><a href="#第二种：本地有-Git-仓库，并且我们已经进行了多次-commit-操作" class="headerlink" title="第二种：本地有 Git 仓库，并且我们已经进行了多次 commit 操作"></a>第二种：本地有 Git 仓库，并且我们已经进行了多次 commit 操作</h3><ol><li>建立一个本地仓库进入，init 初始化；</li><li>关联远程仓库；</li><li>同步远程仓库和本地仓库；</li><li>将文件添加提交到本地仓库；</li><li>将本地仓库的内容 push 到远程仓库。</li></ol><h3 id="第一种方法详细步骤："><a href="#第一种方法详细步骤：" class="headerlink" title="第一种方法详细步骤："></a>第一种方法详细步骤：</h3><p>首先，进入GitHub个人主页：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-e581af472b57655afc1f08c621a2b394_720w.webp" alt="img"></p><p>点击进入我新建的 *<strong>text*</strong> 项目：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-51d2acfef3fe245f470eb5c70083e210_720w.webp" alt="img"></p><p>点击 ***Clone or download***，再复制地址，然后进入我们准备存储 Git 仓库的目录，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-b92a188226f31b52e341872e92dd3152_720w.webp" alt="img"></p><p>接下来，输入 git clone <a href="https://link.zhihu.com/?target=https://github.com/fengye97/text.git">https://github.com/fengye97/text.git</a>，将远程仓库 clone 到本地，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-2494f3caca458107f57963286330f98b_720w.webp" alt="img"></p><p>我们看看 clone 到本地的仓库内容与远程仓库的内容，是否完全一致：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-819a3b9654e68a1183dc14cc2346b7e4_720w.webp" alt="img"></p><p>现在我们创建一个 text.txt 测试文件，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-c970e59aaf58c57d58531f5f073de0ea_720w.webp" alt="img"></p><p>从此目录进入 Git Bash，输入 git status 命令查看仓库状态：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-14f62bfed24bbe3682d7675ac46b073f_720w.webp" alt="img"></p><p>text 已经是一个 Git 仓库了，而我们刚刚创建的文件 text.txt 没有被追踪，也就是没有提交到本地仓库。现在我们使用 git add 命令将文件添加到了「临时缓冲区」，再用 git commit -m “提交信息” 将其提交到本地仓库，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-8ab219eaf21f28af8641aa908585a585_720w.webp" alt="img"></p><p>如果你是第一次提交的话，就会出现下图的情况，会让你输入用户名和邮箱：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-53a22acbdcbd4e1c0f8ba8df5b33f8ce_720w.webp" alt="img"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#你只要再加两行代码就行：</span><br><span class="line">$ git config --global user.name<span class="string">&quot;fengye97&quot;</span></span><br><span class="line">$ git config --global user.email<span class="string">&quot;***@***.com&quot;</span></span><br></pre></td></tr></table></figure><p>完成后输入 git log 命令查看仓库提交日志：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-15b1fe69c604fabef1755014d7893772_720w.webp" alt="img"></p><p>再输入 git status 查看一下仓库状态：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-5c8806b97bde37394c558a6da575abeb_720w.webp" alt="img"></p><p>现在输入 git push origin master 命令，将本地仓库提交到远程仓库，origin是远程主机的名字：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-a6dd07e3a40ea265f2b821db2f33266c_720w.webp" alt="img"></p><p>第一次上传需要输入密码，验证成功后，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-9a5b17a0a6f21e97407150ffdcbb2d02_720w.webp" alt="img"></p><p>刷新 GitHub 中 text 仓库：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-7a0650e21d8c6d4171ecc6aeae04040b_720w.webp" alt="img"></p><p>这时我们的测试文件已经上传到了 text 仓库中。</p><h3 id="第二种方法详细步骤："><a href="#第二种方法详细步骤：" class="headerlink" title="第二种方法详细步骤："></a>第二种方法详细步骤：</h3><p>首先，我们建立一个本地仓库 demo，使用 git init 命令初始化这个仓库，如下图:</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-d159b1c54326f23f7b810d4dca27d988_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-86ac46ad9ef847b17056d80cdd0cfb39_720w.webp" alt="img"></p><p>输入 git remote add origin <a href="https://link.zhihu.com/?target=https://github.com/fengye97/text.git">https://github.com/fengye97/text.git</a> 命令，关联远程仓库，接着输入 git pull origin master 命令，同步远程仓库和本地仓库，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-5035f6cbeabffc1a79f0b7ad75aff277_720w.webp" alt="img"></p><p>回到本地仓库，发现我们已经把远程仓库的内容同步到了本地仓库：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-58bf4f785d0a05fd0d7006998b242425_720w.webp" alt="img"></p><p>接下来的步骤就与第一种方法一样（可以参考上面，已经写得很详细了），先输入 git add 和 git commit 命令，将要提交的文件添加并提交到 demo 仓库；然后再输入 git push origin master 命令，将本地仓库修改（或者添加）的内容提交到远程仓库就完成啦！！！</p><p>参考文献：</p><ol><li><a href="https://link.zhihu.com/?target=https://blog.csdn.net/qq_35246620/article/details/69061355">利用 SSH 完成 Git 与 GitHub 的绑定 - CSDN</a></li><li><a href="https://link.zhihu.com/?target=https://www.cnblogs.com/kermitjam/p/10697185.html">Git与Github的连接与使用 - tank_jam - 博客园</a></li><li><a href="https://link.zhihu.com/?target=https://blog.csdn.net/qq_35246620/article/details/69230109">通过 Git 将代码提交到 GitHub（上）- CSDN</a></li><li><a href="https://link.zhihu.com/?target=https://blog.csdn.net/qq_35246620/article/details/69668846">通过 Git 将代码提交到 GitHub（下）- CSDN</a></li></ol><p>转自<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细） - 知乎 (zhihu.com)</a></p><p>源于 2020-01-21 22:09</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;个人博客第3篇——绑定GitHub并提交文件&quot;&gt;&lt;a href=&quot;#个人博客第3篇——绑定GitHub并提交文件&quot; class=&quot;headerlink&quot; title=&quot;个人博客第3篇——绑定GitHub并提交文件&quot;&gt;&lt;/a&gt;个人博客第3篇——绑定GitHub并提交文件&lt;/h1&gt;&lt;p&gt;绑定github并尝试提交文件&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第二篇博客</title>
    <link href="http://example.com/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-09-22T22:51:32.118Z</published>
    <updated>2023-09-22T23:02:16.966Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人博客第2篇——Git-2-25-0详细安装步骤"><a href="#个人博客第2篇——Git-2-25-0详细安装步骤" class="headerlink" title="个人博客第2篇——Git 2.25.0详细安装步骤"></a>个人博客第2篇——Git 2.25.0详细安装步骤</h1><p>git详细安装步骤</p><span id="more"></span><p>Git 2.25.0 安装步骤：</p><p>进入Git官网<a href="https://git-scm.com/">Git官网</a>，点击 <em><strong>Downloads</strong></em> 下载：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-2b31d71e0a1f88ac25aa580094602d8a_720w.webp" alt="img"></p><p>选择你的系统类型，我的是 Windows：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-27d1caaa40faeafaf23e8e087948b02a_720w.webp" alt="img"></p><p>应该会直接弹出下载：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-28c8d91e603ccc8e491e68459f152381_720w.jpeg" alt="img"></p><p>如果没弹出的话，选择适合你的系统的即可，如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-910eda78b2932aadb839cc07d7900fa7_720w.webp" alt="img"></p><p>下载完成双击打开：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-ffd6a780ac8b9f7f7e66604f1c796f99_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-df7dfe1d55e72e2f28292733194ed1f2_720w.webp" alt="img"></p><p>可以选择 Git 安装位置，然后点击 ***next***：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-acdb676bf346b7bc844946ba5b4994d2_720w.webp" alt="img"></p><p>保持默认就好，直接点击 <em><strong>next</strong></em>：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-01beee7ec450d746190901e14896f183_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-6f8213444c1d382a9f72c012b43cf9f4_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-3dcca92f4b2ab2a909e773c75d55bb9e_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-99ba29abf274903ac4319558920d5741_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-09bafa50241530e08ea6ca7a215de2dd_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-a5179b18ef6e7ee2373278803d07eeb5_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-51a46602b6b59bf66447a47ea1117232_720w.webp" alt="img"></p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-b63d3a8617a7c9d2574c8eb5ed98d217_720w.webp" alt="img"></p><p>完成后选择打开 Git Bash 即可：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-c4f1129c5fbb5ed081e6817d1bb3b97d_720w.webp" alt="img"></p><p>检验成功，点击鼠标右键，出现下图中图标即完成：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-f9c4facc5feccfd6613965fabc8d0833_720w.webp" alt="img"></p><p>打开 Git Bash, 输入git:</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-3d312f3ae164edbe8627faeb25684805_720w.webp" alt="img"></p><p>回车得到如下图：</p><p><img src="/2023/09/23/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/v2-0f41afdb907b3f7f9b26769a2eab1784_720w.webp" alt="img"></p><p>此时你的 Git 就已经安装完成啦！</p><p>转自<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细） - 知乎 (zhihu.com)</a></p><p>源于 2020-01-18 22:21</p><p>上传于2023&#x2F;09&#x2F;23</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;个人博客第2篇——Git-2-25-0详细安装步骤&quot;&gt;&lt;a href=&quot;#个人博客第2篇——Git-2-25-0详细安装步骤&quot; class=&quot;headerlink&quot; title=&quot;个人博客第2篇——Git 2.25.0详细安装步骤&quot;&gt;&lt;/a&gt;个人博客第2篇——Git 2.25.0详细安装步骤&lt;/h1&gt;&lt;p&gt;git详细安装步骤&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://example.com/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <id>http://example.com/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/</id>
    <published>2023-09-22T21:15:58.624Z</published>
    <updated>2023-09-22T23:01:54.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人博客第1篇——注册GitHub"><a href="#个人博客第1篇——注册GitHub" class="headerlink" title="个人博客第1篇——注册GitHub"></a>个人博客第1篇——注册GitHub</h1><p>github详细步骤</p><span id="more"></span><p>注册GitHub详细步骤：</p><p>打开官网: <a href="https://github.com/">https://github.com/</a></p><p>1.如下图点击 sign up 注册</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/1-1695419645443-2-1695420655665-9.jpg"></p><p>注意：我点击sign up 之后，弹出如下页面，箭头所指提示 GitHub 不支持这个浏览器（我用的是搜狗），我看了一下，支持 Chrome，Firefox，就用了 Firefox</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-aa60d95764906967d86f1f2b37876812_r-1695420655665-7.jpg"></p><p>2.用 Firefox 打开 GitHub 官网，进入注册页面：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-1ff6182b94270639bd6b30f7429f7b4a_r-1695420655665-8.jpg"></p><p>填完上图中的昵称、邮箱地址（QQ&#x2F;163邮箱都行）、密码（确保至少有15个字符或至少包括数字和小写字母的8个字符），再验证一下，点击 Next: select a plan, 进入如下页面：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-085ea285eef5ea083157f5f2f37fd161_720w.webp" alt="img"></p><p>3.如上图所示，在选择账户类型这里有一点需要我们注意，那就是：GitHub 的仓库分为两种，一种是public repositories公开免费版，一种是private repositories私有付费版。其中，免费版是完全公开的，而私有版一般是由企业或者不愿公开仓库的个人用户购买，在这里，我们选择免费版就可以，然后点击 Choose Free，进入如下界面：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-d732e119579c1e4221beb9fc06a2c7cf_720w.webp" alt="img"></p><p>4.如上图所示，有一个问卷调查，填不填都无所谓，如果填完就点击 Complete setup, 如果不想填就点击 Skip this step 跳过，不管选择哪个都会进入如下页面：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-950e7f7126ebae4231338e0e66ceb34a_720w.webp" alt="img"></p><p>5.接下来就是验证邮箱地址了，GitHub会发送邮件到你刚才填的邮箱地址，例如我填的是QQ邮箱，登录QQ邮箱，打开收到的邮件，如下图：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-cc2d4571d47a3b3ccf6bbf9e2d083977_720w.webp" alt="img"></p><p>点击 Verify email address, 进入如下页面：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-bef55004624f4e79250bcb312a5bc737_720w.webp" alt="img"></p><p>填好信息点击 sign in 登录,会要求填写验证码，如下图:</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-726ced0f531b2c04805e94b8eb877e8f_720w.webp" alt="img"></p><p>验证码已发送到你的邮箱，点击查看：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-9c09b094315f77a6bfa0722170a92926_720w.webp" alt="img"></p><p>输入验证码，进入如下页面：</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-86ae0674a4343f91750e63cea2b5edee_720w.webp" alt="img"></p><p>点击创建仓库，现在你就有一个名为hello的项目啦！</p><p><img src="/2023/09/23/%E5%8D%9A%E5%AE%A2%E7%AC%AC%E4%B8%80%E7%AF%87/v2-649230bd83b5a42f47ab206fb7f9e696_720w.webp" alt="img"></p><p>到这里已经基本上完成了注册!</p><p>转自<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细） - 知乎 (zhihu.com)</a></p><p>文章源于 2020-01-18 19:45</p><p>上传于2023&#x2F;09&#x2F;23略有不同依旧可用</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;个人博客第1篇——注册GitHub&quot;&gt;&lt;a href=&quot;#个人博客第1篇——注册GitHub&quot; class=&quot;headerlink&quot; title=&quot;个人博客第1篇——注册GitHub&quot;&gt;&lt;/a&gt;个人博客第1篇——注册GitHub&lt;/h1&gt;&lt;p&gt;github详细步骤&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
